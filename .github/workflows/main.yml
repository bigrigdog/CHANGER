name: Enhanced Comprehensive CI/CD Automation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v3

      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pytest sphinx
          pip list

      - name: Setup Environment Paths
        run: |
          echo "/opt/hostedtoolcache/Python/3.8.18/x64/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Auto-formatting with Black and Linting with Flake8
        run: |
          black --check --diff .
          if [ $? -ne 0 ]; then
            echo "Code formatting issues found."
            exit 1  # Fail the workflow if formatting issues are found
          fi
          flake8 . --extend-ignore=E501,F405

      - name: Execute Tests
        run: |
          pytest -vv

      - name: Generate Documentation with Sphinx
        run: |
          sphinx-build -b html ./docs/source ./docs/build

      - name: Cleanup Temporary Files
        run: |
          find . -name "*.tmp" -delete

      - name: Prepare Slack Notification
        id: prep
        shell: bash
        run: |
          echo "::set-output name=color::$(if [[ '${{ job.status }}' == 'success' ]]; then echo 'good'; else echo 'danger'; fi)"

      - name: Notify on Slack with Workflow Status
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
          custom_payload: |
            {
              "text": "Workflow *${{ github.workflow }}* on *${{ github.repository }}*",
              "attachments": [
                {
                  "color": "${{ steps.prep.outputs.color }}",
                  "fields": [
                    {"title": "Job", "value": "${{ github.job }}", "short": true},
                    {"title": "Status", "value": "${{ job.status }}", "short": true},
                    {"title": "Actor", "value": "${{ github.actor }}", "short": true},
                    {"title": "Commit", "value": "${{ github.sha }}", "short": true},
                    {"title": "Ref", "value": "${{ github.ref }}", "short": true}
                  ]
                }
              ]
            }
