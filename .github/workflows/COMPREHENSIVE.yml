name: Comprehensive Repository CI

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  complete-check:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Format Python code with Black
      run: black .
    
    - name: Lint with Flake8
      continue-on-error: true # Allows workflow to continue even if linting fails; adjust as needed
      run: |
        # stops the workflow if errors exceed the max line length or there are syntax errors
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Configurable for non-blocking warnings and subtler issues
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run Tests with Pytest
      run: pytest .
    
    # Implement additional job steps if required, e.g., deploying services, artifact storage, notifications, etc.
    - name: Notify Slack about CI results
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      if: always() # Ensures that tessellation results are reported regardless of success or failure
