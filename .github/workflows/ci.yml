name: Comprehensive CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 4 * * 6'  # Weekly on Saturday at 4 AM UTC
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Unit tests
        run: pytest -vv

  model-training:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Setup environment for heavyweight operations
        run: echo "Setting up heavyweight operations environment"

      # Here we assume cloud training: Implement or replace this to suit your cloud/ML job submission.
      - name: Trigger Cloud Machine Learning Training
        env:
          JOB_SUBMISSION_TOKEN: ${{ secrets.JOB_SUBMISSION_TOKEN }}
          CLOUD_PLATFORM_ENDPOINT: 'example.com/api/train'
        run: |
          curl -X POST $CLOUD_PLATFORM_ENDPOINT \
            -H "Authorization: Bearer $JOB_SUBMISSION_TOKEN" \
            --data "config=quick-start-model-training.yaml"
        if: github.event_name == 'schedule' or github.event_type == 'workflow_dispatch'

  notify:
    needs: model-training
    runs-on: ubuntu-latest

    steps:
      - name: Notification on Slack
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        with:
          slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
          username: GitHub Actions CI
          icon_emoji: ":octocat:"
          attachments: '[{"fallback":"Model Training Alert", "color":"#E01E5A", "title":"[${{ github.repository }}] Model Training Failed","text":"Model Training Workflow ${{ github.workflow }} failed. Please check the logs."}]'

      - name: Post job cleanup
        run: |
          git config --global --add safe.directory /home/runner/work/CHANGER/CHANGER
          git config --local --name-only --get-regexp core.sshCommand
          git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
